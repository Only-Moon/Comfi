/* 
* Comfi Bot for Discord 
* Copyright (C) 2021 Xx-Mohit-xX
* This software is licensed under Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International 
* For more information, see README.md and LICENSE 
*/

const { CommandInteraction, EmbedBuilder, ApplicationCommandOptionType } = require('discord.js')
const guilds = require('../../models/guild')

module.exports = {
  name: 'color',
  description: 'Sets color for all embeds for Comfi!',
  directory: "setting",
  ownerOnly: false,
  options: [
    {
      type: ApplicationCommandOptionType.Subcommand,
      name: 'enable',
      description: 'Sets Color for Comfi\'s Embed',
      options: [
        {
          type: ApplicationCommandOptionType.String,
          description: 'hex code for color',
          name: 'hex',
          required: true,
        }
      ]
    },
    {
      type: ApplicationCommandOptionType.Subcommand,
      name: 'disable',
      description: "Sets Comfi's Embed Color as Default"
    }
  ],
  userperm: ['MANAGE_GUILD'],
  botperm: ['MANAGE_GUILD'],
	/**
	 *
	 * @param {CommandInteraction} interaction
	 * @param {String[]} args
	 */
  run: async (bot, interaction, args) => {
    let [subcommand] = args
    try {
      if (subcommand === 'enable') {

        let color = interaction.options.getString('rgb or hex')
        if (/^#[0-9A-F]{6}$/i.test(color)) {

          await guilds.findOneAndUpdate(
            { guildId: interaction.guild.id },
            {
              color: color
            }
          )
          return await bot.successEmbed(bot, interaction, `Successfully set Comfi's Embed Color to ${color}`
          )
        } else {
          return await bot.errorEmbed(bot, interaction, `Please Provide a valid hex code`)
        }
      }

      if (subcommand === 'disable') {

        await guilds.findOneAndUpdate(
          { guildId: interaction.guild.id },
          {
            color: null
          }
        )

        return await bot.successEmbed(bot, interaction, `Successfully set Comfi's Embed Color as default`
        )
      }
    } catch (e) {
      await bot.senderror(interaction, e)
    }
  }
}

